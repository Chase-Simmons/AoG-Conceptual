{"ast":null,"code":"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../redux/mapStoreToProps';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet dispatcher;\nlet display;\n\nclass EVL extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      dispatcher = (type, payload) => {\n        this.props.dispatch({\n          type,\n          payload\n        });\n      };\n\n      display = this.props.store.displayReducer;\n      const mainMenuItem = document.querySelectorAll('.mainMenuItem'); // dispatcher('SET_DISPLAY', display.classList.value);\n\n      function mainMenuItemClick() {\n        const selectedClass = this.classList[1];\n        console.log(`i have been clicked -> ${selectedClass}`);\n        display.forEach(item => {\n          if (item !== selectedClass && item[0] + item[1] + item[2] + item[3] !== 'hide') {\n            dispatcher('SET_DISPLAY', [...display, `hide-${item}`]);\n          }\n        }); // display.classList.add(`${selectedClass}`);\n        // display.classList.remove(`hide-${selectedClass}`);\n      }\n\n      function mainMenuItemRemoval() {// displayArray.remove('hide-mainMenu');\n        // console.log(displayArray);\n      }\n\n      mainMenuItem.forEach(item => item.addEventListener('click', mainMenuItemClick)); // display.addEventListener('transitionend', mainMenuItemRemoval);\n      // console.log(mainMenuItem); // CL DEBUGGER\n      //\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n}\n\nexport default connect(mapStoreToProps)(EVL);","map":{"version":3,"sources":["/Users/chase/AoG JS/src/functions/EVL.js"],"names":["React","Component","connect","mapStoreToProps","dispatcher","display","EVL","componentDidMount","type","payload","props","dispatch","store","displayReducer","mainMenuItem","document","querySelectorAll","mainMenuItemClick","selectedClass","classList","console","log","forEach","item","mainMenuItemRemoval","addEventListener","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;;AAEA,IAAIC,UAAJ;AACA,IAAIC,OAAJ;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAC1BM,iBAD0B,GACN,MAAM;AACxBH,MAAAA,UAAU,GAAG,CAACI,IAAD,EAAOC,OAAP,KAAmB;AAC9B,aAAKC,KAAL,CAAWC,QAAX,CAAoB;AAAEH,UAAAA,IAAF;AAAQC,UAAAA;AAAR,SAApB;AACD,OAFD;;AAGAJ,MAAAA,OAAO,GAAG,KAAKK,KAAL,CAAWE,KAAX,CAAiBC,cAA3B;AAEA,YAAMC,YAAY,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,eAA1B,CAArB,CANwB,CAQxB;;AAEA,eAASC,iBAAT,GAA6B;AAC3B,cAAMC,aAAa,GAAG,KAAKC,SAAL,CAAe,CAAf,CAAtB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAa,0BAAyBH,aAAc,EAApD;AAEAb,QAAAA,OAAO,CAACiB,OAAR,CAAiBC,IAAD,IAAU;AACxB,cACEA,IAAI,KAAKL,aAAT,IACAK,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAd,GAAoBA,IAAI,CAAC,CAAD,CAAxB,GAA8BA,IAAI,CAAC,CAAD,CAAlC,KAA0C,MAF5C,EAGE;AACAnB,YAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,GAAGC,OAAJ,EAAc,QAAOkB,IAAK,EAA1B,CAAhB,CAAV;AACD;AACF,SAPD,EAJ2B,CAa3B;AACA;AACD;;AAED,eAASC,mBAAT,GAA+B,CAC7B;AACA;AACD;;AAEDV,MAAAA,YAAY,CAACQ,OAAb,CAAsBC,IAAD,IACnBA,IAAI,CAACE,gBAAL,CAAsB,OAAtB,EAA+BR,iBAA/B,CADF,EAhCwB,CAmCxB;AAEA;AACA;AACD,KAxCyB;AAAA;;AAyC1BS,EAAAA,MAAM,GAAG;AACP,wBAAO,qCAAP;AACD;;AA3CyB;;AA8C5B,eAAexB,OAAO,CAACC,eAAD,CAAP,CAAyBG,GAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../redux/mapStoreToProps';\n\nlet dispatcher;\nlet display;\n\nclass EVL extends Component {\n  componentDidMount = () => {\n    dispatcher = (type, payload) => {\n      this.props.dispatch({ type, payload });\n    };\n    display = this.props.store.displayReducer;\n\n    const mainMenuItem = document.querySelectorAll('.mainMenuItem');\n\n    // dispatcher('SET_DISPLAY', display.classList.value);\n\n    function mainMenuItemClick() {\n      const selectedClass = this.classList[1];\n      console.log(`i have been clicked -> ${selectedClass}`);\n\n      display.forEach((item) => {\n        if (\n          item !== selectedClass &&\n          item[0] + item[1] + item[2] + item[3] !== 'hide'\n        ) {\n          dispatcher('SET_DISPLAY', [...display, `hide-${item}`]);\n        }\n      });\n\n      // display.classList.add(`${selectedClass}`);\n      // display.classList.remove(`hide-${selectedClass}`);\n    }\n\n    function mainMenuItemRemoval() {\n      // displayArray.remove('hide-mainMenu');\n      // console.log(displayArray);\n    }\n\n    mainMenuItem.forEach((item) =>\n      item.addEventListener('click', mainMenuItemClick)\n    );\n    // display.addEventListener('transitionend', mainMenuItemRemoval);\n\n    // console.log(mainMenuItem); // CL DEBUGGER\n    //\n  };\n  render() {\n    return <></>;\n  }\n}\n\nexport default connect(mapStoreToProps)(EVL);\n"]},"metadata":{},"sourceType":"module"}