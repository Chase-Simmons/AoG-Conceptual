{"ast":null,"code":"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../redux/mapStoreToProps';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet dispatcher;\n\nclass EVL extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      dispatcher = (type, payload) => {\n        this.props.dispatch({\n          type,\n          payload\n        });\n      };\n\n      const mainMenuItem = document.querySelectorAll('.mainMenuItem');\n      const display = document.querySelector('.display');\n      const displayArray = [];\n      dispatcher('SET_DISPLAY', display.classList);\n      console.log(display.classList.value);\n\n      function mainMenuItemClick() {\n        const selectedClass = this.classList[1];\n        console.log(`i have been clicked -> ${selectedClass}`);\n        display.classList.forEach(item => {\n          displayArray.push(item);\n\n          if (item !== selectedClass && item[0] + item[1] + item[2] + item[3] !== 'hide') {\n            displayArray.push(`hide-${item}`);\n          }\n        });\n        dispatcher('SET_DISPLAY', displayArray); // display.classList.add(`${selectedClass}`);\n        // display.classList.remove(`hide-${selectedClass}`);\n      }\n\n      function mainMenuItemRemoval() {\n        displayArray.remove('hide-mainMenu');\n        dispatcher('SET_DISPLAY', displayArray);\n        console.log(displayArray);\n      }\n\n      mainMenuItem.forEach(item => item.addEventListener('click', mainMenuItemClick));\n      display.addEventListener('transitionend', mainMenuItemRemoval);\n      console.log(mainMenuItem); // CL DEBUGGER\n      //\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n}\n\nexport default connect(mapStoreToProps)(EVL);","map":{"version":3,"sources":["/Users/chase/AoG JS/src/functions/EVL.js"],"names":["React","Component","connect","mapStoreToProps","dispatcher","EVL","componentDidMount","type","payload","props","dispatch","mainMenuItem","document","querySelectorAll","display","querySelector","displayArray","classList","console","log","value","mainMenuItemClick","selectedClass","forEach","item","push","mainMenuItemRemoval","remove","addEventListener","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;;AAEA,IAAIC,UAAJ;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAC1BK,iBAD0B,GACN,MAAM;AACxBF,MAAAA,UAAU,GAAG,CAACG,IAAD,EAAOC,OAAP,KAAmB;AAC9B,aAAKC,KAAL,CAAWC,QAAX,CAAoB;AAAEH,UAAAA,IAAF;AAAQC,UAAAA;AAAR,SAApB;AACD,OAFD;;AAIA,YAAMG,YAAY,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,eAA1B,CAArB;AACA,YAAMC,OAAO,GAAGF,QAAQ,CAACG,aAAT,CAAuB,UAAvB,CAAhB;AACA,YAAMC,YAAY,GAAG,EAArB;AAEAZ,MAAAA,UAAU,CAAC,aAAD,EAAgBU,OAAO,CAACG,SAAxB,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACG,SAAR,CAAkBG,KAA9B;;AAEA,eAASC,iBAAT,GAA6B;AAC3B,cAAMC,aAAa,GAAG,KAAKL,SAAL,CAAe,CAAf,CAAtB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAa,0BAAyBG,aAAc,EAApD;AAEAR,QAAAA,OAAO,CAACG,SAAR,CAAkBM,OAAlB,CAA2BC,IAAD,IAAU;AAClCR,UAAAA,YAAY,CAACS,IAAb,CAAkBD,IAAlB;;AACA,cACEA,IAAI,KAAKF,aAAT,IACAE,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAd,GAAoBA,IAAI,CAAC,CAAD,CAAxB,GAA8BA,IAAI,CAAC,CAAD,CAAlC,KAA0C,MAF5C,EAGE;AACAR,YAAAA,YAAY,CAACS,IAAb,CAAmB,QAAOD,IAAK,EAA/B;AACD;AACF,SARD;AAUApB,QAAAA,UAAU,CAAC,aAAD,EAAgBY,YAAhB,CAAV,CAd2B,CAe3B;AACA;AACD;;AAED,eAASU,mBAAT,GAA+B;AAC7BV,QAAAA,YAAY,CAACW,MAAb,CAAoB,eAApB;AACAvB,QAAAA,UAAU,CAAC,aAAD,EAAgBY,YAAhB,CAAV;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACD;;AAEDL,MAAAA,YAAY,CAACY,OAAb,CAAsBC,IAAD,IACnBA,IAAI,CAACI,gBAAL,CAAsB,OAAtB,EAA+BP,iBAA/B,CADF;AAGAP,MAAAA,OAAO,CAACc,gBAAR,CAAyB,eAAzB,EAA0CF,mBAA1C;AAEAR,MAAAA,OAAO,CAACC,GAAR,CAAYR,YAAZ,EA1CwB,CA0CG;AAC3B;AACD,KA7CyB;AAAA;;AA8C1BkB,EAAAA,MAAM,GAAG;AACP,wBAAO,qCAAP;AACD;;AAhDyB;;AAmD5B,eAAe3B,OAAO,CAACC,eAAD,CAAP,CAAyBE,GAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../redux/mapStoreToProps';\n\nlet dispatcher;\n\nclass EVL extends Component {\n  componentDidMount = () => {\n    dispatcher = (type, payload) => {\n      this.props.dispatch({ type, payload });\n    };\n\n    const mainMenuItem = document.querySelectorAll('.mainMenuItem');\n    const display = document.querySelector('.display');\n    const displayArray = [];\n\n    dispatcher('SET_DISPLAY', display.classList);\n    console.log(display.classList.value);\n\n    function mainMenuItemClick() {\n      const selectedClass = this.classList[1];\n      console.log(`i have been clicked -> ${selectedClass}`);\n\n      display.classList.forEach((item) => {\n        displayArray.push(item);\n        if (\n          item !== selectedClass &&\n          item[0] + item[1] + item[2] + item[3] !== 'hide'\n        ) {\n          displayArray.push(`hide-${item}`);\n        }\n      });\n\n      dispatcher('SET_DISPLAY', displayArray);\n      // display.classList.add(`${selectedClass}`);\n      // display.classList.remove(`hide-${selectedClass}`);\n    }\n\n    function mainMenuItemRemoval() {\n      displayArray.remove('hide-mainMenu');\n      dispatcher('SET_DISPLAY', displayArray);\n      console.log(displayArray);\n    }\n\n    mainMenuItem.forEach((item) =>\n      item.addEventListener('click', mainMenuItemClick)\n    );\n    display.addEventListener('transitionend', mainMenuItemRemoval);\n\n    console.log(mainMenuItem); // CL DEBUGGER\n    //\n  };\n  render() {\n    return <></>;\n  }\n}\n\nexport default connect(mapStoreToProps)(EVL);\n"]},"metadata":{},"sourceType":"module"}